/*------------------------------------------------------------------
[COMMENTARY STYLES]

/*
 * [CODE STYLE]
 *
 * Multiline commentary
 *
 */

/*------------------------------------*\
  SECTION HEADER
\*------------------------------------*/

/*==========================================================================
  Section comment block
  ==========================================================================*/

/*Sub-section comment block
  ========================================================================== */

/**
  * Short description using Doxygen-style comment format
  *
  * The first sentence of the long description starts here and continues on this
  * line for a while finally concluding here at the end of this paragraph.
  *
  * The long description is ideal for more detailed explanations and
  * documentation. It can include example HTML, URLs, or any other information
  * that is deemed necessary or useful.
  *
  * @tag This is a tag named 'tag'
  *
  * TODO: This is a todo statement that describes an atomic task to be completed
  *   at a later date. It wraps after 80 characters and following lines are
  *   indented by 2 spaces.
  */

/* Basic comment */






/*------------------------------------------------------------------
[PROPERTY PRIORITY (ПОРЯДОК СВОЙСТВ)]

.declaration-order {
  / Позиционирование /
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  z-index: 100;

  / Модель /
  display: block;
  float: right;
  width: 100px;
  height: 100px;
  margin: 10px;
  padding: 10px;
  visibility: hidden;
  overflow: hidden;
  vertical-align: value;

  / Типографика /
  font: normal 13px/1.5 "Arial", sans-serif;
  font-style: normal;
  font-size: 13px;
  line-height: 1.5;
  font-family: "Arial", sans-serif;
  text-align: center; --(center | left | right | justify | justify-all)
  color: colorname; --(colorname | #hexcode | rgb(red, green, blue) | rgba(r, g, b, alfa-value) | hsl(number/angle, percentage, percentage) | hsla(n/a, perc, perc, alfa-value) | transparent)
  text-decoration: none;
  text-shadow: 0 0 0 color;

  / Оформление /
  bacground: ... ;
  background-color: #f5f5f5;
  border: 1px solid #e5e5e5;
  border-radius: 3px;
  opacity: 1;

  / Анимация /
  transition: color 1s;

  / Разное /
  will-change: auto;
}
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[SELECTOR STRUCTURE (ОФОРМЛЕНИЕ СЕЛЕКТОРА)]
.selector,
.selector-secondary,
.selector[type="text"] {
  ...;
}
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[CUSTOM PROPERTY, CSS-переменные]

**обьявление:

*глобальная область видимости:
:root {
  --text-sm: 0.5rem;
}

*область видимости внутри элемента и глубже:
element {
  --main-bg-color: brown;
}

**применение:

element {
  background-color: var(--main-bg-color);
  padding: calc(var(--text-sm) * 2);
  font-size: var(--text-sm), 8px; (8px - фолбэк, сработает если переменная или её значение недопустимо)
}

**неопределенная ед. измерения:
--title-width: 300; (ед. измерения не указана)
  width: calc(var(--title-width) * 1px); (число определяется в px при умножении на 1px)

**переопределение:
.title {
  --wrapper-width: 50%;
  width: var(--wrapper-width);
}

@media (max-width: 320px) {
  --wrapper-width: 100%;
}

or

:root {
  --is-big: 0;
}

.is-big {
  --is-big: 1;
}

.block {
  padding: calc(25px * var(--is-big) + 10px * (1 - var(--is-big)));
  border-width: calc(3px * var(--is-big) + 1px * (1 - var(--is-big)));
}

**Fallback:
.block {
  color: #f00;
}

@supports (color: rgb(0, calc(0), 0)) {
  .block {
    color: rgba(calc(255 * (1 - var(--foo))), calc(255 * var(--foo)), 0, 1);
  }
}

-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[PSEUDOCLASSES, PSEUDOELEMENTS]

**ПСЕВДОКЛАССЫ:
:active
:any-link
:checked
:blank
:default
:defined
:dir()
:disabled
:empty
:enabled
:first
:first-child
:first-of-type
:fullscreen
:focus
:focus-visible
:focus-within
:has()
:host()
:host-context()
:hover
:indeterminate
:in-range
:invalid
:is() (:matches(), :any())
:lang()
:last-child
:last-of-type
:left
:link
:not()
:nth-child
:nth-last-child
:nth-last-of-type()
:nth-of-type
:only-child
:only-of-type
:optional
:out-of-range
:placeholder-shown
:read-only
:read-write
:required
:right
:root
:scope
:target
:valid
:visited
:where()

**ПСЕВДОЭЛЕМЕНТЫ:
::after (:after)
::backdrop
::before (:before)
::cue
::first-letter (:first-letter)
::first-line (:first-line)
::grammar-error
::marker
::part()
::placeholder
::selection
::slotted()
::spelling-error

**Порядок обьявления псевдоклассов и псевдоэлементов:
  Порядок для ссылок - :link, :visited, :hover, :active;

**li:not(.first-item):not(:last-of-type) {background: yellow;color: black;} - Все элементы будут с черным текстом и желтым фоном за исключением элементов li с классом .first-item и последнего элемента li в списке;

**.class-name:hover::before {} - сначала обьявляется псевдокласс, затем псевдоэлемент;
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[STRUCTURE attributes]

  [data-state="visible"] {...}
  [data-prod-id="468"] {...}

  [attribute] {...} - все "attribute-name";
  [attribute=”value”] {...} - все "attribute-name" со значением точно совпадающим с заданным "value";
  [attribute|=”value”] {...} - все "attribute-name" со значениями точно совпадающими, либо содержащими знак "-" сразу после "value" (value-x, value-one, value-value-x);
  [attribute^=”value”] {...} - все "attribute-name" со значением которое начинается с "value";
  [attribute$=”value”] {...} - все "attribute-name" со значением которое заканчивается на "value";
  [attribute*=”value”] {...} - все "attribute-name" со значениями содержащими "value";
  [attribute~=”value1 value2 value3”] {...} - все "attribute-name" со значениями перечисленными через пробел (применится если будет совпадать хотябы с одним из "value");

  .class[attribute=”value”] {...} - все "attribute-name" со значением точно совпадающим с заданным "value", входящими в состав "class-name";
  #id[attribute=”value”] {...} - все "attribute-name" со значением точно совпадающим с заданным "value", входящими в состав "id-name";
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[COMBINATORS (селекторы, составные селекторы. сложно-составные селекторы)]

  .class .child-class {...} - все child-class, внутри "class" независимо от глубины;
  .class-1>.child-class {...} - все child-class, которые являются непосредственными (прямыми, на первом уровне вложенности) потомками;
  .class-1+.class-2 {...} - выбирает элемент "class-2", который находится непосредственно после указанного элемента, если у них общий родитель;
  .class-1,.class-2 {...} - все class-1 и class-2;
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[Transitions]

div {
    transition: <property> <duration> <timing-function> <delay>;
}

or multi:

div {
transition: <property> <duration> <timing-function> <delay>,
            <property> <duration> <timing-function> <delay>;
}

and default:

div {
transition-delay: 0s;
transition-duration: 0s;
transition-property: all;
transition-timing-function: ease;
}
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[Animations]

*default:

div {
  animation-name: none; --(keyframename | none | initial | inherit)
  animation-duration: 0s; --(0.0s | 000ms)
  animation-timing-function: ease; -- (linear | ease | ease-in | ease-out | ease-in-out | step-start | step-end | steps(int,start|end) | cubic-bezier(n,n,n,n) | initial | inherit)
  animation-delay: 0s; -- (0.0s | 000ms)
  animation-iteration-count: 1; -- (number | infinite | initial | inherit)
  animation-direction: normal; -- (normal | reverse | alternate | alternate-reverse | initial | inherit)
  animation-fill-mode: none; -- (none | forwards | backwards | both | initial | inherit)
  animation-play-state: running; -- (paused | running | initial | inherit)
}

@keyframes keyframename{
  from {
    property: value;
  }
  to {
    property: value;
  }
}

@keyframes keyframename{
  0% {
    property: value;
  }
  100% {
    property: value;
  }
}

*Множественные анимации:
Для одного элемента можно задавать несколько анимаций, перечислив их названия через запятую:

div {
  animation: shadow 1s ease-in-out 0.5s alternate, move 5s linear 2s;
}
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[Font properties]

  font-display: swap; (swap|block|fallback|auto|optional) - параметр загрузки шрифта

  format('woff2') - Chrome 26+, Opera 23+, Firefox 39+
  format('woff') - Chrome 6+, Firefox 3.6+, IE 9+, Safari 5.1+

  font-style: italic; *стиль шрифта (normal|italic|oblique)

  font-weight: normal; * или font-weight: 400; (100 - 500)
  font-weight: bold; * или font-weight: 700; (600 - 900)

  *вес шрифта от 100 до 900, можно также указывать вес шрифта через название:

  100 = Thin (Тонкий)
  200 = Extra Light (Дополнительный светлый или сверхсветлый)
  300 = Light (Светлый)
  400 = Normal или Regular (Нормальный или обычный)
  500 = Medium (Средний)

  600 = Semi Bold (Полужирный)
  700 = Bold (Жирный)
  800 = Extra Bold (Дополнительный жирный или сверхжирный)
  900 = Black (Черный или густой)
}
-------------------------------------------------------------------*/


/*------------------------------------------------------------------
[CSS properties]

·align-content
·align-items
·align-self

*animation*
·  animation
·  animation-delay
·  animation-direction
·  animation-duration
·  animation-fill-mode
·  animation-iteration-count
·  animation-name
·  animation-play-state
·  animation-timing-function

·backface-visibility

*background*
·  background
·  background-attachment
·  background-clip
·  background-color
·  background-image
·  background-origin
·  background-position
·  background-repeat
·  background-size

*border*
·  border
·  border-bottom
·  border-bottom-color
·  border-bottom-left-radius
·  border-bottom-right-radius
·  border-bottom-style
·  border-bottom-width
·  border-collapse
·  border-color
·  border-image
·  border-image-outset
·  border-image-repeat
·  border-image-slice
·  border-image-source
·  border-image-width
·  border-left
·  border-left-color
·  border-left-style
·  border-left-width
·  border-radius
·  border-right
·  border-right-color
·  border-right-style
·  border-right-width
·  border-spacing
·  border-style
·  border-top
·  border-top-color
·  border-top-left-radius
·  border-top-right-radius
·  border-top-style
·  border-top-width
·  border-width

·bottom
·box-shadow
·box-sizing
·caption-side
·clear
·clip
·color

*column*
·  column-count
·  column-fill
·  column-gap
·  column-rule
·  column-rule-color
·  column-rule-style
·  column-rule-width
·  column-span
·  column-width
·  columns

·content
·counter-increment
·counter-reset
·cursor
·direction
·display
·empty-cells

*flex*
·  flex
·  flex-basis
·  flex-direction
·  flex-flow
·  flex-grow
·  flex-shrink
·  flex-wrap

·float

*font*
·  font
·  font-family
·  font-size
·  font-size-adjust
·  font-stretch
·  font-style
·  font-variant
·  font-weight

·height
·justify-content
·left
·letter-spacing
·line-height

*list-style*
·  list-style
·  list-style-image
·  list-style-position
·  list-style-type

*margin*
·  margin
·  margin-bottom
·  margin-left
·  margin-right
·  margin-top

·max-height
·max-width
·min-height
·min-width
·opacity
·order

*outline*
·  outline
·  outline-color
·  outline-offset
·  outline-style
·  outline-width

·overflow
·overflow-x
·overflow-y

*padding*
·  padding
·  padding-bottom
·  padding-left
·  padding-right
·  padding-top

*page-break*
·  page-break-after
·  page-break-before
·  page-break-inside

·perspective
·perspective-origin
·position
·quotes
·resize
·right
·table-layout

*text*
·  text-align
·  text-align-last
·  text-decoration
·  text-decoration-color
·  text-decoration-line
·  text-decoration-style
·  text-indent
·  text-justify
·  text-overflow
·  text-shadow
·  text-transform

·top

*transform*
·  transform
·  transform-origin
·  transform-style

*transition*
·  transition
·  transition-delay
·  transition-duration
·  transition-property
·  transition-timing-function

·unicode-bidi
·vertical-align
·visibility
·white-space
·width
·word-break
·word-spacing
·word-wrap
·z-index
-------------------------------------------------------------------*/




/*------------------------------------------------------------------
[STRUCTURE classes]

.c-component-name; (class="c-btn")
.c-component-name_element-name; (class="c-btn_title")
.c-component-name_element-name--variant-element-name; (class="page-header_title page-header_title--light")
.e-element-name;
.e-element-name--element-variant-name;
-------------------------------------------------------------------*/
